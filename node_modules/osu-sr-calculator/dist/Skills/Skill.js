"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const Spinner_1 = require("../Objects/osu!/HitObjects/Spinner");
class Skill {
    constructor() {
        this.SINGLE_SPACING_THRESHOLD = 125;
        this.STREAM_SPACING_THRESHOLD = 110;
        this.Previous = [];
        this.currentStrain = 1;
        this.currentSectionPeak = 1;
        this.strainPeaks = [];
    }
    saveCurrentPeak() {
        if (this.Previous.length > 0)
            this.strainPeaks.push(this.currentSectionPeak);
    }
    ;
    startNewSectionFrom(offset) {
        if (this.Previous.length > 0)
            this.currentSectionPeak = this.currentStrain * this.strainDecay(offset - this.Previous[0].CurrentObject.StartTime);
    }
    ;
    process(currentObject) {
        this.currentStrain *= this.strainDecay(currentObject.DeltaTime);
        if (!(currentObject.CurrentObject instanceof Spinner_1.Spinner))
            this.currentStrain += this.strainValueOf(currentObject) * this.SkillMultiplier;
        this.currentSectionPeak = Math.max(this.currentStrain, this.currentSectionPeak);
        this.addToHistory(currentObject);
    }
    ;
    difficultyValue() {
        this.strainPeaks.sort((a, b) => {
            return b - a;
        });
        let difficulty = 0;
        let weight = 1;
        this.strainPeaks.forEach(strain => {
            difficulty += strain * weight;
            weight *= 0.9;
        });
        return difficulty;
    }
    ;
    strainDecay(ms) {
        return Math.pow(this.StrainDecayBase, ms / 1000);
    }
    ;
    addToHistory(currentObject) {
        this.Previous.unshift(currentObject);
        if (this.Previous.length > 2)
            this.Previous.pop();
    }
    ;
}
exports.Skill = Skill;
;
